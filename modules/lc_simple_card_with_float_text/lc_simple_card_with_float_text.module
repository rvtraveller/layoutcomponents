<?php

/**
 * Implements hook_theme().
 */
function lc_simple_card_with_float_text_theme($existing, $type, $theme, $path) {
  return [
    'layoutcomponents_block_content__simple_card_with_float_text' => [
      'base hook' => 'block',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function lc_simple_card_with_float_text_preprocess_block(&$variables) {
  if (!array_key_exists('#block_content', $variables['content'])) {
    return;
  }

  /** @var \Drupal\block_content\Entity\BlockContent $block */
  $block = $variables['content']['#block_content'];

  if ($block->bundle() != 'simple_card_with_float_text') {
    return;
  }

  $block_id = str_replace(' ', '_', $block->uuid());
  $extra_class = $block->get('field_scwft_extra_classes')->getString();
  $extra_attributes = $block->get('field_scwft_extra_attributes')->getString();

  $classes = [
    'simple-card-with-float-text',
    'lc-inline_block_' . $block_id . '-card-with-float-text-edit',
  ];

  // Set classes.
  if (!empty($extra_class)) {
    $extra_class = explode(" ", $extra_class);
    $classes = array_merge($classes, $extra_class);
    $variables['content']['#attributes']['class'][] = implode(" ", $classes);
  }

  // Set attributes.
  if (!empty($extra_attributes)) {
    $parts = explode(" ", $extra_attributes);
    foreach ($parts as $attribute) {
      if (strpos($attribute, '|') !== FALSE) {
        list($key, $value) = explode('|', $attribute);
        $variables['content']['#attributes'][$key] = $value;
      }
    }
  }

  $variables['#attached']['library'][] = 'lc_simple_card_with_float_text/lc_simple_card_with_float_text';
}
